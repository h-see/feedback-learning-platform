version: '3.8'
networks:
  laravel:

services:
  nginx:
    build:
      context: ./docker
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    restart: unless-stopped
    container_name: nginx
    ports:
      - 80:8000
    volumes:
      - .:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - php
      - mysql
    networks:
      - laravel


  php:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: php
    ports:
      - ":9000"
    volumes:
      - .:/var/www/html
      - .env:/var/www/html/.env
    networks:
      - laravel

  mysql:
    image: mariadb:11.1.2
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql:/var/lib/mysql
    networks:
      - laravel

  composer:
    build:
      context: ./docker
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: composer
    volumes:
      - .:/var/www/html
      - .env:/var/www/html/.env
    working_dir: /var/www/html
    depends_on:
      - php
    user: ${USER:-laravel} #system user
    profiles: ["composer"]
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  artisan:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: artisan
    volumes:
      - .:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - mysql
    working_dir: /var/www/html
    profiles: ["artisan"]
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  npm:
    image: node:alpine
    container_name: npm
    volumes:
      - .:/var/www/html
      - .env:/var/www/html/.env
    working_dir: /var/www/html
    profiles: ["npm"]
    entrypoint: ['npm']
    networks:
      - laravel

  laravel-migrate-seed:
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - USER=${USER:-laravel}
    container_name: laravel-migrate-seed
    volumes:
      - .:/var/www/html
      - .env:/var/www/html/.env
    depends_on:
      - mysql
    profiles: ["migrate-seed"]
    working_dir: /var/www/html
    entrypoint: ["/bin/sh","-c"]
    command:
    - |
      php artisan migrate
      php artisan db:seed
      php artisan db:seed --class=TestDataSeeder
    networks:
      - laravel

  phpmyadmin-platform:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-platform
    restart: unless-stopped
    ports:
      - 8088:80 
    environment:
      PMA_HOST: mysql
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD} 
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} 
    depends_on:
      - mysql 
    networks:
      - laravel